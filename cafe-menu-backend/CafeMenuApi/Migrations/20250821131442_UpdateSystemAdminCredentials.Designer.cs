// <auto-generated />
using System;
using CafeMenuApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeMenuApi.Migrations
{
    [DbContext(typeof(CafeMenuContext))]
    [Migration("20250821131442_UpdateSystemAdminCredentials")]
    partial class UpdateSystemAdminCredentials
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CafeMenuApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "انواع قهوه‌های تازه و خوشمزه",
                            Icon = "https://images.unsplash.com/photo-1509042239860-f550ce710b93?w=100&h=100&fit=crop",
                            Name = "قهوه",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "چای‌های معطر و گیاهی",
                            Icon = "https://images.unsplash.com/photo-1544787219-7f47ccb76574?w=100&h=100&fit=crop",
                            Name = "چای",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "نوشیدنی‌های خنک و طراوت‌بخش",
                            Icon = "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?w=100&h=100&fit=crop",
                            Name = "نوشیدنی سرد",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "دسرهای خوشمزه و شیرین",
                            Icon = "https://images.unsplash.com/photo-1551024601-bec78aea704b?w=100&h=100&fit=crop",
                            Name = "دسر",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "غذاهای اصلی و خوشمزه",
                            Icon = "https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=100&h=100&fit=crop",
                            Name = "غذا",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "صبحانه‌های مقوی و سالم",
                            Icon = "https://images.unsplash.com/photo-1525351484163-7529414344d8?w=100&h=100&fit=crop",
                            Name = "صبحانه",
                            PlaceId = 1
                        });
                });

            modelBuilder.Entity("CafeMenuApi.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PlaceId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "قهوه تلخ و قوی",
                            Image = "https://images.unsplash.com/photo-1510707577719-ae7c14805e3a?w=300&h=200&fit=crop",
                            Name = "اسپرسو",
                            Photos = "https://images.unsplash.com/photo-1510707577719-ae7c14805e3a?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1447933601403-0c6688de566e?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1542181961-9590d0c79dab?w=300&h=200&fit=crop",
                            PlaceId = 1,
                            Price = 25000m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "قهوه با شیر و فوم",
                            Image = "https://images.unsplash.com/photo-1534778101976-62847782c213?w=300&h=200&fit=crop",
                            Name = "کاپوچینو",
                            Photos = "https://images.unsplash.com/photo-1534778101976-62847782c213?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1509042239860-f550ce710b93?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1461023058943-07fcbe16d735?w=300&h=200&fit=crop",
                            PlaceId = 1,
                            Price = 35000m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "چای سنتی ایرانی",
                            Image = "https://images.unsplash.com/photo-1544787219-7f47ccb76574?w=300&h=200&fit=crop",
                            Name = "چای سیاه",
                            Photos = "https://images.unsplash.com/photo-1544787219-7f47ccb76574?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1576092768241-dec231879fc3?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1597318181409-cf85ba05cd49?w=300&h=200&fit=crop",
                            PlaceId = 1,
                            Price = 20000m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "قهوه سرد و خوشمزه",
                            Image = "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?w=300&h=200&fit=crop",
                            Name = "آیس کافی",
                            Photos = "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1461023058943-07fcbe16d735?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1497515114629-f71d768fd07c?w=300&h=200&fit=crop",
                            PlaceId = 1,
                            Price = 40000m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Description = "دسر ایتالیایی خوشمزه",
                            Image = "https://images.unsplash.com/photo-1551024601-bec78aea704b?w=300&h=200&fit=crop",
                            Name = "تیرامیسو",
                            Photos = "https://images.unsplash.com/photo-1551024601-bec78aea704b?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=300&h=200&fit=crop,https://images.unsplash.com/photo-1464349095431-e9a21285b5f3?w=300&h=200&fit=crop",
                            PlaceId = 1,
                            Price = 55000m
                        });
                });

            modelBuilder.Entity("CafeMenuApi.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "تهران، خیابان ولیعصر",
                            CoverImage = "https://images.unsplash.com/photo-1554118811-1e0d58224f24?w=800&h=400&fit=crop",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "کافه‌ای گرم و دوستانه با منوی متنوع",
                            Email = "info@pishedoostam.com",
                            IsActive = true,
                            Logo = "https://images.unsplash.com/photo-1554118811-1e0d58224f24?w=100&h=100&fit=crop",
                            Name = "کافه پیشه دوستان",
                            Phone = "021-12345678"
                        });
                });

            modelBuilder.Entity("CafeMenuApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "SuperAdmin@2025!",
                            Role = 1,
                            Username = "superadmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Password = "admin123",
                            PlaceId = 1,
                            Role = 2,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("CafeMenuApi.Models.Category", b =>
                {
                    b.HasOne("CafeMenuApi.Models.Place", "Place")
                        .WithMany("Categories")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("CafeMenuApi.Models.MenuItem", b =>
                {
                    b.HasOne("CafeMenuApi.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CafeMenuApi.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("CafeMenuApi.Models.User", b =>
                {
                    b.HasOne("CafeMenuApi.Models.Place", "Place")
                        .WithMany("Users")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Place");
                });

            modelBuilder.Entity("CafeMenuApi.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("CafeMenuApi.Models.Place", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
